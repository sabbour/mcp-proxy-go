name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Run tests
      run: go test ./tests/...

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for git describe
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Get version
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "version=$(git describe --tags --always --dirty)" >> $GITHUB_OUTPUT
        fi
    
    - name: Build binaries
      run: |
        mkdir -p bin
        BUILD_TIME=$(date -u '+%Y-%m-%d_%H:%M:%S')
        VERSION="${{ steps.version.outputs.version }}"
        COMMIT_SHA=$(git rev-parse --short HEAD)
        LDFLAGS="-s -w -X main.Version=${VERSION} -X main.BuildTime=${BUILD_TIME} -X main.CommitSHA=${COMMIT_SHA}"
        
        echo "Building version: ${VERSION}"
        echo "Build time: ${BUILD_TIME}"
        echo "Commit: ${COMMIT_SHA}"
        
        # Windows
        env CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -a -installsuffix cgo -ldflags="${LDFLAGS}" -o bin/mcp-proxy-windows-amd64.exe ./cmd/mcp-proxy
        env CGO_ENABLED=0 GOOS=windows GOARCH=arm64 go build -a -installsuffix cgo -ldflags="${LDFLAGS}" -o bin/mcp-proxy-windows-arm64.exe ./cmd/mcp-proxy
        
        # Linux
        env CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags="${LDFLAGS}" -o bin/mcp-proxy-linux-amd64 ./cmd/mcp-proxy
        env CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -a -installsuffix cgo -ldflags="${LDFLAGS}" -o bin/mcp-proxy-linux-arm64 ./cmd/mcp-proxy
        
        # Show file sizes
        ls -lah bin/
    
    - name: Calculate checksums
      run: |
        cd bin
        sha256sum * > checksums.txt
        cat checksums.txt
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mcp-proxy-binaries
        path: bin/
        retention-days: 30
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          bin/*
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ghcr.io/${{ github.repository }}/mcp-proxy-go:${{ steps.version.outputs.version }} .

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker image
      run: |
        docker push ghcr.io/${{ github.repository }}/mcp-proxy-go:${{ steps.version.outputs.version }}